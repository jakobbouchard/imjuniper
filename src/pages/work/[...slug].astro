---
import { type CollectionEntry, getCollection } from "astro:content";
import { Picture } from "astro:assets";

import BaseLayout from "@layouts/BaseLayout.astro";

import ContactCTA from "@components/ContactCTA.astro";
import LazyVideo from "@components/LazyVideo.astro";
import LazyLoadVideo from "@components/LazyLoadVideoScript.astro";

import Hero from "@components/Hero.astro";
import Icon from "@components/Icon.astro";
import Pill from "@components/Pill.astro";

export async function getStaticPaths() {
	const work = await getCollection("work");
	return work.map((entry) => ({
		params: { slug: entry.slug },
		props: { entry },
	}));
}

interface Props {
	entry: CollectionEntry<"work">;
}

const { entry } = Astro.props;
const { Content } = await entry.render();
---

<BaseLayout
	title={`${entry.data.title} â€“ Jakob Bouchard `}
	description={entry.data.description}
>
	<div class="stack gap-15 lg:gap-20">
		<article class="stack gap-10 lg:gap-15">
			<header>
				<div class="wrapper stack gap-2">
					<a class="back-link" href="/work/"><Icon icon="arrow-left" /> Work</a>
					<Hero
						title={entry.data.title}
						align="start"
						tagline={entry.data.attribution}
						ctaLink={entry.data.url}
					>
						<div class="details">
							<div class="tags">
								{entry.data.tags.map((t) => <Pill>{t}</Pill>)}
							</div>
							<p class="description">{entry.data.description}</p>
						</div>
					</Hero>
				</div>
			</header>

			<section class="wrapper">
				<div class="stack gap-2 lg:gap-10 content">
					{
						entry.data.img && !entry.data.videoPreview && (
							<Picture
								formats={["avif", "webp"]}
								src={entry.data.img}
								width={entry.data.img.width}
								height={entry.data.img.height}
								alt={entry.data.imgAlt || ""}
								quality={85}
							/>
						)
					}
					{
						entry.data.videoPreview && (
							<LazyVideo filename={entry.data.videoPreview} />
						)
					}
					<div class="content">
						<Content />
					</div>
				</div>
			</section>
		</article>

		<ContactCTA />
	</div>
</BaseLayout>

<LazyLoadVideo />

<style>
	header {
		padding-bottom: 2.5rem;
		border-bottom: 1px solid var(--gray-800);
	}

	.back-link {
		display: none;
	}

	.details {
		display: none;
	}

	.content {
		max-width: 60ch;
		margin-inline: auto;
		font-size: var(--text-md);
	}

	.content > :global(* + *) {
		margin-top: 1rem;
	}

	.content :global(h1),
	.content :global(h2),
	.content :global(h3),
	.content :global(h4),
	.content :global(h5) {
		margin: 1.5rem 0;
	}

	.content :global(h2) {
		font-size: var(--text-2xl);
	}

	.content :global(h3) {
		font-size: var(--text-xl);
	}

	.content :global(img),
	.content :global(video),
	.content :global(iframe) {
		border-radius: 1.5rem;
		box-shadow: var(--shadow-sm);
		background: var(--gradient-subtle);
		border: 1px solid var(--gray-800);
	}

	.content :global(blockquote) {
		font-size: var(--text-lg);
		font-family: var(--font-brand);
		font-weight: 600;
		line-height: 1.1;
		padding-inline-start: 1.5rem;
		border-inline-start: 0.25rem solid var(--accent-dark);
		color: var(--gray-0);
	}

	.content :global(iframe) {
		margin-top: 2rem;
		width: 100%;
		aspect-ratio: 16/9;
	}

	.back-link,
	.content :global(a) {
		text-decoration: 1px solid underline transparent;
		text-underline-offset: 0.25em;
		transition: text-decoration-color var(--theme-transition);
	}

	.back-link:hover,
	.back-link:focus,
	.content :global(a:hover),
	.content :global(a:focus) {
		text-decoration-color: currentColor;
	}

	@media (min-width: 50em) {
		.back-link {
			display: block;
			align-self: flex-start;
			font-size: var(--text-md);
		}

		.details {
			gap: 2.5rem;
			align-items: flex-start;
		}

		.details {
			display: flex;
			flex-direction: row;
			padding: 0.5rem;
			gap: 1.5rem;
			justify-content: space-between;
			align-items: center;
		}

		.tags {
			display: flex;
			gap: 0.5rem;
		}

		.description {
			font-size: var(--text-md);
			max-width: 54ch;
		}

		.content :global(blockquote) {
			font-size: var(--text-2xl);
		}
	}

	@media (min-width: 62em) {
		.description {
			font-size: var(--text-lg);
		}

		.content :global(h2) {
			font-size: var(--text-3xl);
		}

		.content :global(h3) {
			font-size: var(--text-2xl);
		}
	}
</style>
