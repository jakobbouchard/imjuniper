---
import Icon from "./Icon.astro";
---

<back-to-top>
	<template>
		<a class="back-to-top" href="#top">
			<span class="sr-only">Back to top</span>
			<Icon icon="arrow-up-circle" />
		</a>
	</template>
</back-to-top>

<script>
	class BackToTopButton extends HTMLElement {
		constructor() {
			super();

			// Inject button when JS runs.
			this.appendChild(this.querySelector("template")!.content.cloneNode(true));
			const btn = this.querySelector("a")!;

			/** Set whether the button is currently shown or hidden. */
			const setShow = (scrolled: boolean) => {
				btn.classList.toggle("show", scrolled);
			};

			// Hide button if not scrolled enough
			const handleScroll = () => {
				setShow(document.body.scrollTop > 250);
			};
			handleScroll();
			document.body.addEventListener("scroll", handleScroll);
		}
	}
	customElements.define("back-to-top", BackToTopButton);
</script>

<style>
	back-to-top {
		position: fixed;
		right: 2rem;
		bottom: 2rem;
	}

	.back-to-top {
		position: relative;
		display: flex;
		border-radius: 999rem;
		border: 1px var(--gray-700) solid;
		padding: 0.5rem;
		font-size: 1.5rem;
		color: var(--gray-300);
		background: radial-gradient(var(--gray-900), var(--gray-800) 150%);
		box-shadow: var(--shadow-md);
		pointer-events: none;
		opacity: 0;
		transform: translateY(25%);
		transition: opacity 0.2s ease, transform 0.2s ease;
	}

	.back-to-top:hover {
		color: var(--gray-0);
		background: linear-gradient(180deg, var(--gray-600), transparent),
			radial-gradient(var(--gray-800), var(--gray-900) 150%);
	}

	:global(.theme-dark) .back-to-top:hover {
		background: linear-gradient(180deg, transparent, var(--gray-600)),
			radial-gradient(var(--gray-900), var(--gray-800) 150%);
	}

	.back-to-top.show {
		pointer-events: unset;
		opacity: unset;
		transform: unset;
	}
</style>
