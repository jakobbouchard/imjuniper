<script>
	function loadVideo(video: HTMLVideoElement) {
		const sources: NodeListOf<HTMLSourceElement> =
			video.querySelectorAll("source");

		for (const source of sources) {
			if (source.dataset.src == undefined) continue;

			source.src = source.dataset.src;
			source.removeAttribute("data-src");
		}

		video.load();
		video.classList.remove("lazy");
	}

	function initializeLazyLoadObserver() {
		const lazyVideoObserver = new IntersectionObserver(function (
			entries,
			observer,
		) {
			for (const entry of entries) {
				if (!entry.isIntersecting) continue;

				loadVideo(entry.target as HTMLVideoElement);
				observer.unobserve(entry.target);
			}
		});

		document
			.querySelectorAll("video.lazy")
			.forEach(lazyVideoObserver.observe);
	}

	document.addEventListener("DOMContentLoaded", initializeLazyLoadObserver);
</script>
