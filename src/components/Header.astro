---
import HeaderIcon from "@components/HeaderIcon.astro";
import Icon, { type Props as IconProps } from "@components/Icon.astro";
import ThemeToggle from "@components/ThemeToggle.astro";

const mainMenuItems: { label: string; href: string }[] = [
	{ label: "Work", href: "/work" },
	{ label: "About me", href: "/about" },
	{ label: "Contact", href: "/contact" },
];

const socialMedias: {
	title: IconProps["title"];
	href: string;
	icon: IconProps["icon"];
}[] = [
	{
		title: "Bluesky",
		href: "https://bsky.app/profile/imjuniper.fyi",
		icon: "butterfly",
	},
	{
		title: "LinkedIn",
		href: "https://www.linkedin.com/in/jakobbouchard",
		icon: "linkedin-logo",
	},
	{
		title: "itch.io",
		href: "https://imjuniper.itch.io",
		icon: "game-controller",
	},
	{
		title: "GitHub",
		href: "https://github.com/jakobbouchard",
		icon: "github-logo",
	},
];
---

<script>
	class MenuButton extends HTMLElement {
		constructor() {
			super();

			const btn = this.querySelector("button")!;
			const text = this.querySelector("span.sr-only")!;

			const setExpanded = (expand: boolean) => {
				btn.setAttribute("aria-expanded", expand ? "true" : "false");
				text.textContent = expand ? "Close menu" : "Open menu";
				this.parentElement!.classList.toggle("menu-open", expand);
			};

			btn.addEventListener("click", () => setExpanded(!this.isOpen()));

			const handleViewports = (
				e: MediaQueryList | MediaQueryListEvent,
			) => {
				setExpanded(e.matches);
			};
			const mediaQueries = window.matchMedia("(min-width: 50em)");
			handleViewports(mediaQueries);
			mediaQueries.addEventListener("change", handleViewports);
		}

		isOpen() {
			return this.parentElement!.classList.contains("menu-open");
		}
	}
	customElements.define("menu-button", MenuButton);
</script>

<header id="site-header" role="banner">
	<div class="menu-header">
		<a
			href="/"
			aria-label="menu-home"
			class="site-title"
			id="menu-item-home"
		>
			<HeaderIcon
				defaultIcon="terminal-window"
				randomIcons={["terminal-window", "code", "cat", "coffee"]}
				color="var(--accent-regular)"
				size="1.6em"
				gradient
			/>
			Juniâ€½
		</a>
		<menu-button>
			<button class="menu-button" aria-expanded="false">
				<span class="sr-only">Open menu</span>
				<Icon icon="list" />
			</button>
		</menu-button>
	</div>
	<nav class="main-menu" id="main-menu" role="navigation" aria-label="Site">
		<h2 id="main-nav-title" class="sr-only">Site navigation</h2>
		<ul aria-labelledby="main-nav-title">
			{
				mainMenuItems.map(({ label, href }) => (
					<li>
						<a
							aria-current={
								Astro.url.pathname === href ||
								Astro.url.pathname === `${href}/`
									? "page"
									: false
							}
							class:list={[
								"link",
								{
									active:
										Astro.url.pathname === href ||
										(href !== "/" &&
											Astro.url.pathname.startsWith(
												href,
											)),
								},
							]}
							href={href}
						>
							{label}
						</a>
					</li>
				))
			}
		</ul>
	</nav>
	<nav id="social-menu" class="menu-footer" aria-label="Social">
		<h2 id="social-nav-title" class="sr-only">Social medias</h2>
		<ul class="socials" aria-describedby="social-nav-title">
			{
				socialMedias.map(({ href, icon, title }) => (
					<li>
						<a rel="me external noopener" href={href}>
							<Icon title={title} icon={icon} />
						</a>
					</li>
				))
			}
		</ul>

		<div class="theme-toggle">
			<ThemeToggle />
		</div>
	</nav>
</header>

<style>
	header {
		z-index: 9999;
		position: relative;
		margin-bottom: 3.5rem;
	}

	.menu-header {
		display: flex;
		justify-content: space-between;
		gap: 0.5rem;
		padding: 1.5rem;
	}

	.site-title {
		display: flex;
		gap: 0.5rem;
		align-items: center;
		line-height: 1.1;
		color: var(--gray-0);
		text-decoration: none;
	}

	.menu-button {
		position: relative;
		display: flex;
		border: 0;
		border-radius: 999rem;
		padding: 0.5rem;
		font-size: 1.5rem;
		color: var(--gray-300);
		background: radial-gradient(var(--gray-900), var(--gray-800) 150%);
		box-shadow: var(--shadow-md);
	}

	:global(.no-js) .menu-button {
		display: none;
	}

	.menu-button[aria-expanded="true"] {
		color: var(--gray-0);
		background: linear-gradient(180deg, var(--gray-600), transparent),
			radial-gradient(var(--gray-900), var(--gray-800) 150%);
	}

	:global(.theme-dark) .menu-button[aria-expanded="true"] {
		background: linear-gradient(180deg, transparent, var(--gray-600)),
			radial-gradient(var(--gray-900), var(--gray-800) 150%);
	}

	.menu-button::before {
		position: absolute;
		inset: -1px;
		content: "";
		background: var(--gradient-stroke);
		border-radius: 999rem;
		z-index: -1;
	}

	.main-menu ul {
		margin: 0;
		display: flex;
		flex-direction: column;
		gap: 1rem;
		font-size: var(--text-md);
		line-height: 1.2;
		list-style: none;
		padding: 2rem;
		background-color: var(--gray-999);
		border-bottom: 1px solid var(--gray-800);
	}

	:global(.theme-dark) .main-menu ul {
		background-color: var(--gray-900);
	}

	.main-menu {
		display: none;
	}

	:global(.no-js) .main-menu,
	.menu-header.menu-open ~ .main-menu {
		display: block;
	}

	.link {
		display: inline-block;
		color: var(--gray-300);
		text-decoration: none;
		font-family: var(--font-body);
	}

	.link.active {
		color: var(--gray-0);
	}

	.menu-footer {
		--icon-size: var(--text-xl);
		--icon-padding: 0.5rem;

		display: none;
		justify-content: space-between;
		gap: 0.75rem;
		padding: 1.5rem 2rem 1.5rem 1.5rem;
		background-color: var(--gray-999);
		border-radius: 0 0 0.75rem 0.75rem;
		box-shadow: var(--shadow-lg);
	}

	:global(.theme-dark) .menu-footer {
		background-color: var(--gray-900);
	}

	:global(.no-js) .menu-footer,
	.menu-header.menu-open ~ .menu-footer {
		display: flex;
	}

	.socials {
		display: flex;
		flex-wrap: wrap;
		gap: 0.625rem;
		padding-left: 0;
		font-size: var(--icon-size);
		list-style: none;
	}

	.socials a {
		display: flex;
		padding: var(--icon-padding);
		text-decoration: none;
		color: var(--accent-dark);
		transition: color var(--theme-transition);
	}

	.socials a:hover,
	.socials a:focus {
		color: var(--gray-0);
	}

	.theme-toggle {
		display: none;
		align-items: center;
		height: calc(var(--icon-size) + 2 * var(--icon-padding));
	}

	:global(.js) .theme-toggle {
		display: flex;
	}

	@media (min-width: 50em) {
		header {
			display: grid;
			grid-template-columns: 1fr auto 1fr;
			align-items: center;
			padding: 2.5rem 5rem;
			gap: 1rem;
		}

		.menu-header {
			padding: 0;
		}

		.site-title {
			font-size: var(--text-lg);
		}

		.menu-button {
			display: none;
		}

		.main-menu {
			display: block;
		}

		.main-menu ul {
			position: relative;
			flex-direction: row;
			font-size: var(--text-sm);
			border-radius: 999rem;
			border: 0;
			padding: 0.5rem 0.5625rem;
			background: radial-gradient(var(--gray-900), var(--gray-800) 150%);
			box-shadow: var(--shadow-md);
		}

		:global(.theme-dark) .main-menu ul {
			background: radial-gradient(var(--gray-800), var(--gray-900) 150%);
		}

		.main-menu ul::before {
			position: absolute;
			inset: -1px;
			content: "";
			background: var(--gradient-stroke);
			border-radius: 999rem;
			z-index: -1;
		}

		.link {
			padding: 0.5rem 1rem;
			border-radius: 999rem;
			transition:
				color var(--theme-transition),
				background-color var(--theme-transition);
		}

		.link:hover,
		.link:focus {
			color: var(--gray-100);
			background-color: var(--accent-subtle-overlay);
		}

		.link.active {
			color: var(--accent-text-over);
			background-color: var(--accent-regular);
		}

		.menu-footer {
			--icon-padding: 0.375rem;

			display: flex;
			justify-self: flex-end;
			align-items: center;
			padding: 0;
			background-color: transparent;
			box-shadow: none;
		}

		.socials {
			display: none;
		}
	}

	@media (min-width: 60em) {
		.socials {
			display: flex;
			justify-content: flex-end;
			gap: 0;
		}

		.link {
			font-size: var(--text-base);
		}
	}

	@media (forced-colors: active) {
		.link.active {
			color: SelectedItem;
		}
	}
</style>
